import{_ as a,c as e,o as i,ae as t}from"./chunks/framework.CtVwKphR.js";const c=JSON.parse('{"title":"Class: EventSystem","description":"","frontmatter":{"layout":"doc","sidebar":true},"headers":[],"relativePath":"api/classes/EventSystem.md","filePath":"api/classes/EventSystem.md"}'),n={name:"api/classes/EventSystem.md"};function l(h,s,r,p,o,d){return i(),e("div",null,s[0]||(s[0]=[t(`<p><a href="./../README.html"><strong>BelowJS API v1.0.0-rc.1</strong></a></p><hr><p><a href="./../globals.html">BelowJS API</a> / EventSystem</p><h1 id="class-eventsystem" tabindex="-1">Class: EventSystem <a class="header-anchor" href="#class-eventsystem" aria-label="Permalink to &quot;Class: EventSystem&quot;">​</a></h1><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L36" target="_blank" rel="noreferrer">utils/EventSystem.js:36</a></p><p>EventSystem - Simple event emitter for BelowJS components</p><p>Provides event-driven communication between BelowJS components with error handling and a chainable API. Used as a base class for all major BelowJS classes.</p><p>EventSystem</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Extend EventSystem for your own classes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyViewer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EventSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  loadModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;loading-start&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { model });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Listen to events</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Handle loaded model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Remove specific listener</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, myCallback);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Remove all listeners for an event</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="since" tabindex="-1">Since <a class="header-anchor" href="#since" aria-label="Permalink to &quot;Since&quot;">​</a></h2><p>1.0.0</p><h2 id="extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./BelowViewer.html"><code>BelowViewer</code></a></li><li><a href="./ModelViewer.html"><code>ModelViewer</code></a></li><li><a href="./Camera.html"><code>Camera</code></a></li></ul><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h3><blockquote><p><strong>new EventSystem</strong>(): <code>EventSystem</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L40" target="_blank" rel="noreferrer">utils/EventSystem.js:40</a></p><p>Creates a new EventSystem instance</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EventSystem</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="events" tabindex="-1">events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;events&quot;">​</a></h3><blockquote><p><strong>events</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L41" target="_blank" rel="noreferrer">utils/EventSystem.js:41</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="emit" tabindex="-1">emit() <a class="header-anchor" href="#emit" aria-label="Permalink to &quot;emit()&quot;">​</a></h3><blockquote><p><strong>emit</strong>(<code>event</code>, <code>data?</code>): <code>EventSystem</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L121" target="_blank" rel="noreferrer">utils/EventSystem.js:121</a></p><p>Emit an event to all listeners</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="event" tabindex="-1">event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;event&quot;">​</a></h5><p><code>string</code></p><p>Event name to emit</p><h5 id="data" tabindex="-1">data? <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data?&quot;">​</a></h5><p><code>any</code></p><p>Data to pass to event listeners</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EventSystem</code></p><p>Returns this for chaining</p><h4 id="method" tabindex="-1">Method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;Method&quot;">​</a></h4><p>emit</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Emit event with data</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  model: loadedModel, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  loadTime: Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> startTime </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Emit event without data</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rendering-complete&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="since-1" tabindex="-1">Since <a class="header-anchor" href="#since-1" aria-label="Permalink to &quot;Since&quot;">​</a></h4><p>1.0.0</p><hr><h3 id="off" tabindex="-1">off() <a class="header-anchor" href="#off" aria-label="Permalink to &quot;off()&quot;">​</a></h3><blockquote><p><strong>off</strong>(<code>event</code>, <code>callback?</code>): <code>EventSystem</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L90" target="_blank" rel="noreferrer">utils/EventSystem.js:90</a></p><p>Remove an event listener</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="event-1" tabindex="-1">event <a class="header-anchor" href="#event-1" aria-label="Permalink to &quot;event&quot;">​</a></h5><p><code>string</code></p><p>Event name</p><h5 id="callback" tabindex="-1">callback? <a class="header-anchor" href="#callback" aria-label="Permalink to &quot;callback?&quot;">​</a></h5><p><code>Function</code></p><p>Specific callback to remove (optional)</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EventSystem</code></p><p>Returns this for chaining</p><h4 id="method-1" tabindex="-1">Method <a class="header-anchor" href="#method-1" aria-label="Permalink to &quot;Method&quot;">​</a></h4><p>off</p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Remove specific callback</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, myCallback);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Remove all listeners for an event</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="since-2" tabindex="-1">Since <a class="header-anchor" href="#since-2" aria-label="Permalink to &quot;Since&quot;">​</a></h4><p>1.0.0</p><hr><h3 id="on" tabindex="-1">on() <a class="header-anchor" href="#on" aria-label="Permalink to &quot;on()&quot;">​</a></h3><blockquote><p><strong>on</strong>(<code>event</code>, <code>callback</code>): <code>EventSystem</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L65" target="_blank" rel="noreferrer">utils/EventSystem.js:65</a></p><p>Add an event listener</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="event-2" tabindex="-1">event <a class="header-anchor" href="#event-2" aria-label="Permalink to &quot;event&quot;">​</a></h5><p><code>string</code></p><p>Event name to listen for</p><h5 id="callback-1" tabindex="-1">callback <a class="header-anchor" href="#callback-1" aria-label="Permalink to &quot;callback&quot;">​</a></h5><p><code>Function</code></p><p>Callback function to execute</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EventSystem</code></p><p>Returns this for chaining</p><h4 id="method-2" tabindex="-1">Method <a class="header-anchor" href="#method-2" aria-label="Permalink to &quot;Method&quot;">​</a></h4><p>on</p><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Listen for model loading events</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Process loaded model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Chain multiple listeners</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-loaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, onLoaded)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model-error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, onError);</span></span></code></pre></div><h4 id="since-3" tabindex="-1">Since <a class="header-anchor" href="#since-3" aria-label="Permalink to &quot;Since&quot;">​</a></h4><p>1.0.0</p><hr><h3 id="removealllisteners" tabindex="-1">removeAllListeners() <a class="header-anchor" href="#removealllisteners" aria-label="Permalink to &quot;removeAllListeners()&quot;">​</a></h3><blockquote><p><strong>removeAllListeners</strong>(): <code>EventSystem</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/e0d2339359551c744ccd91c6c9a89c4c86b5b199/src/utils/EventSystem.js#L146" target="_blank" rel="noreferrer">utils/EventSystem.js:146</a></p><p>Remove all event listeners</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EventSystem</code></p><p>Returns this for chaining</p><h4 id="method-3" tabindex="-1">Method <a class="header-anchor" href="#method-3" aria-label="Permalink to &quot;Method&quot;">​</a></h4><p>removeAllListeners</p><h4 id="example-3" tabindex="-1">Example <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Clean up all listeners</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viewer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeAllListeners</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="since-4" tabindex="-1">Since <a class="header-anchor" href="#since-4" aria-label="Permalink to &quot;Since&quot;">​</a></h4><p>1.0.0</p>`,103)]))}const E=a(n,[["render",l]]);export{c as __pageData,E as default};
