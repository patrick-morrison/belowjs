import{_ as e,c as o,o as r,ae as t}from"./chunks/framework.CtVwKphR.js";const u=JSON.parse('{"title":"Class: ConfigValidator","description":"","frontmatter":{"layout":"doc","sidebar":true},"headers":[],"relativePath":"api/classes/ConfigValidator.md","filePath":"api/classes/ConfigValidator.md"}'),i={name:"api/classes/ConfigValidator.md"};function s(l,a,n,d,c,h){return r(),o("div",null,a[0]||(a[0]=[t('<p><a href="./../README.html"><strong>BelowJS API v1.0.0-rc.1</strong></a></p><hr><p><a href="./../globals.html">BelowJS API</a> / ConfigValidator</p><h1 id="class-configvalidator" tabindex="-1">Class: ConfigValidator <a class="header-anchor" href="#class-configvalidator" aria-label="Permalink to &quot;Class: ConfigValidator&quot;">​</a></h1><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/03f7a8be425170900ce7223be2af24ddc822ead2/src/utils/ConfigValidator.js#L4" target="_blank" rel="noreferrer">utils/ConfigValidator.js:4</a></p><p>Validates a configuration object against a schema, applying defaults.</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h3><blockquote><p><strong>new ConfigValidator</strong>(<code>schema</code>): <code>ConfigValidator</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/03f7a8be425170900ce7223be2af24ddc822ead2/src/utils/ConfigValidator.js#L8" target="_blank" rel="noreferrer">utils/ConfigValidator.js:8</a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="schema" tabindex="-1">schema <a class="header-anchor" href="#schema" aria-label="Permalink to &quot;schema&quot;">​</a></h5><p><code>any</code></p><p>Defines validation rules for each configuration key.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>ConfigValidator</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="schema-1" tabindex="-1">schema <a class="header-anchor" href="#schema-1" aria-label="Permalink to &quot;schema&quot;">​</a></h3><blockquote><p><strong>schema</strong>: <code>any</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/03f7a8be425170900ce7223be2af24ddc822ead2/src/utils/ConfigValidator.js#L12" target="_blank" rel="noreferrer">utils/ConfigValidator.js:12</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="istypevalid" tabindex="-1">isTypeValid() <a class="header-anchor" href="#istypevalid" aria-label="Permalink to &quot;isTypeValid()&quot;">​</a></h3><blockquote><p><strong>isTypeValid</strong>(<code>value</code>, <code>type</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/03f7a8be425170900ce7223be2af24ddc822ead2/src/utils/ConfigValidator.js#L61" target="_blank" rel="noreferrer">utils/ConfigValidator.js:61</a></p><p>Checks if a value conforms to the specified type or types.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>any</code></p><p>The value to check.</p><h5 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h5><p>The expected type or an array of allowed types.</p><p><code>string</code> | <code>string</code>[]</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><hr><h3 id="validate" tabindex="-1">validate() <a class="header-anchor" href="#validate" aria-label="Permalink to &quot;validate()&quot;">​</a></h3><blockquote><p><strong>validate</strong>(<code>options</code>): <code>any</code></p></blockquote><p>Defined in: <a href="https://github.com/patrick-morrison/belowjs/blob/03f7a8be425170900ce7223be2af24ddc822ead2/src/utils/ConfigValidator.js#L20" target="_blank" rel="noreferrer">utils/ConfigValidator.js:20</a></p><p>Validates an options object against the schema.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h5><p><code>any</code></p><p>The raw options object to validate.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><p>A validated configuration object with defaults applied.</p>',46)]))}const b=e(i,[["render",s]]);export{u as __pageData,b as default};
